{
  "quiz": {
    "id": 37919,
    "title": "Object-Orientation Fundamentals Quiz",
    "html_url": "https://learning.flatironschool.com/courses/5935/quizzes/37919",
    "mobile_url": "https://learning.flatironschool.com/courses/5935/quizzes/37919?force_user=1&persist_headless=1",
    "description": "<div id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-3-quiz-object-orientation-fundamentals\"></div>\n<header class=\"fis-header\"><a class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-3-quiz-object-orientation-fundamentals/issues/new\" target=\"_blank\"><img id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"></a></header>\n<p>It's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again.</p>\n<p>If you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.</p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 8,
    "points_possible": 8.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_37919"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": "",
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/5935/quizzes/37919/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/5935/quizzes/37919/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/5935/quizzes/37919/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/5935/quizzes/37919/submission_versions",
    "assignment_id": 209392,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 15695,
    "show_correct_answers_last_attempt": true,
    "version_number": 7,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": "ga182108f248509461563dc8cd93dc953",
    "in_paced_course": false,
    "question_types": [
      "multiple_choice_question",
      "short_answer_question"
    ]
  },
  "questions": [
    {
      "id": 272169,
      "quiz_id": 37919,
      "quiz_group_id": null,
      "assessment_question_id": 469350,
      "position": null,
      "question_name": "OO Concepts",
      "question_type": "multiple_choice_question",
      "question_text": "<p>A class is like a blueprint that defines how to build an object.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Classes and Instances",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/5935/pages/classes-and-instances\">Classes and Instances</a></li></ul><p></p>",
      "answers": [
        {
          "id": 7123,
          "text": "True",
          "html": "",
          "comments": "",
          "comments_html": "Perfect! Objects are instantiated from classes and have access to the instance\nmethods and variables defined in the class.",
          "weight": 100.0
        },
        {
          "id": 2734,
          "text": "False",
          "html": "",
          "comments": "",
          "comments_html": "You might be confusing objects and classes. Be sure to review the sources\nlisted in the feedback.",
          "weight": 0.0
        },
        {
          "id": 5933,
          "text": "",
          "html": "I don't know",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 272170,
      "quiz_id": 37919,
      "quiz_group_id": null,
      "assessment_question_id": 469349,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>To define a class, what syntax is used?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Classes and Instances",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p>\n<ul>\n<li><a href=\"/courses/5935/pages/classes-and-instances\">Classes and Instances</a></li>\n</ul>\n<p>&nbsp;</p>",
      "answers": [
        {
          "id": 2665,
          "text": "",
          "html": "<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Pet:<br></span>  pass</code></pre>\n</div>",
          "comments": "",
          "comments_html": "<p>Correct! The declaration always starts with <code>class</code> with a colon</p>",
          "weight": 100.0
        },
        {
          "id": 670,
          "text": "",
          "html": "<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"no\">Class</span> <span class=\"no\">Pet<br>  pass<br></span>\n</code></pre>\n</div>",
          "comments": "",
          "comments_html": "<p>This syntax looks a little off. Try running it in the REPL to see what happens.</p>",
          "weight": 0.0
        },
        {
          "id": 930,
          "text": "",
          "html": "<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"no\">Class</span> <span class=\"n\">pet<br>  pass<br></span>\n</code></pre>\n</div>",
          "comments": "",
          "comments_html": "<p>Something is not right about this. Try running this code in the REPL to see the result.</p>",
          "weight": 0.0
        },
        {
          "id": 2582,
          "text": "",
          "html": "<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"n\">pet</span>\n  pass</code></pre>\n</div>",
          "comments": "",
          "comments_html": "<p>Something isn't quite right with this syntax. Try running it in the REPL to see what happens.</p>",
          "weight": 0.0
        },
        {
          "id": 4357,
          "text": "",
          "html": "I don't know",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 272171,
      "quiz_id": 37919,
      "quiz_group_id": null,
      "assessment_question_id": 469351,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Consider the following code:</p>\n<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Pet:</span>\n  <span class=\"k\">def</span> __<span class=\"nf\">init__</span><span class=\"p\">(self, </span><span class=\"nb\">name</span><span class=\"p\">):</span>\n    self.<span class=\"vi\">name</span> <span class=\"o\">=</span> <span class=\"nb\">name</span>\n\n<span class=\"n\">dog</span> <span class=\"o\">=</span> <span class=\"no\">Pet</span><span class=\"p\">(</span><span class=\"s2\">\"Harpo\"</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n<p>In the example above, <code>Pet(\"Harpo\")</code> will instantiate a new instance of the <code>Pet</code> class.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Classes and Instances",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/5935/pages/classes-and-instances\">Classes and Instances</a></li></ul><p></p>",
      "answers": [
        {
          "id": 1723,
          "text": "True",
          "html": "",
          "comments": "",
          "comments_html": "Yes! The class has been declared correctly, so a new instance will be returned\nwhen the code is run.",
          "weight": 100.0
        },
        {
          "id": 8213,
          "text": "False",
          "html": "",
          "comments": "",
          "comments_html": "Try running the code. Why did you think a new instance of <code>Pet</code> would not be\ncreated?",
          "weight": 0.0
        },
        {
          "id": 2094,
          "text": "",
          "html": "I don't know",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 272172,
      "quiz_id": 37919,
      "quiz_group_id": null,
      "assessment_question_id": 469352,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Consider the following code:</p>\n<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Pet:</span>\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(self, </span><span class=\"nb\">name</span><span class=\"p\">):</span>\n    self.<span class=\"vi\">name</span> <span class=\"o\">=</span> <span class=\"nb\">name<br><br>  def print_name(self, name):<br>    print(self.name)<br></span>\n\n\n<span class=\"n\">dog</span> <span class=\"o\">=</span> <span class=\"no\">Pet<br>dog.print_name()</span></code></pre>\n</div>\n<p><code>Pet </code>in this example will instantiate a new instance of the <code>Pet</code> class and print_name() will print nothing.&nbsp;</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Object Initialization",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/5935/pages/object-initialization\">Object Initialization</a></li></ul><p></p>",
      "answers": [
        {
          "id": 4651,
          "text": "",
          "html": "<p>False</p>",
          "comments": "",
          "comments_html": "<p>Correct! We need to provide a name when instantiating an instance of the <code>Pet</code> class because that's what <code>initialize</code> expects. We'll get an TypeError when we try to use the name attribute.</p>",
          "weight": 100.0
        },
        {
          "id": 160,
          "text": "True",
          "html": "",
          "comments": "",
          "comments_html": "<p>This is a bit of a tough question. Take a look at the&nbsp; <code>__init__</code> function and then the last line of code. What do you notice?</p>",
          "weight": 0.0
        },
        {
          "id": 8541,
          "text": "",
          "html": "I don't know",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 272173,
      "quiz_id": 37919,
      "quiz_group_id": null,
      "assessment_question_id": 469359,
      "position": null,
      "question_name": "Getter Methods",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Consider the following code:</p>\n<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Pet:</span>\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"nb\">self, name</span><span class=\"p\">):</span>\n    self.<span class=\"vi\">name</span> <span class=\"o\">=</span> <span class=\"nb\">name</span>\n\n\n<span class=\"n\">rabbit</span> <span class=\"o\">=</span> <span class=\"no\">Pet</span><span class=\"p\">(</span><span class=\"s2\">\"Jabby\"</span><span class=\"p\">)</span>\n<span class=\"n\">print(rabbit</span><span class=\"p\">.</span><span class=\"nf\">name)</span>\n</code></pre>\n</div>\n<p><code>rabbit.name</code> in this example will return <code>\"Jabby\"</code>.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Object Attributes",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/5935/pages/object-attributes\">Object Attributes</a></li></ul><p></p>",
      "answers": [
        {
          "id": 8743,
          "text": "True",
          "html": "",
          "comments": "",
          "comments_html": "<p>Yes! The <code>name</code> method will return the value stored in <code>self.name</code>, which was set to <code>\"Jabby\"</code> when this pet was initialized.</p>",
          "weight": 100.0
        },
        {
          "id": 8613,
          "text": "False",
          "html": "",
          "comments": "",
          "comments_html": "What happens when you run the code? How and why does that differ from what you\nexpected? Which methods are available in <code>Pet</code> and what do they do?",
          "weight": 0.0
        },
        {
          "id": 5554,
          "text": "",
          "html": "I don't know",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 272175,
      "quiz_id": 37919,
      "quiz_group_id": null,
      "assessment_question_id": 469355,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "short_answer_question",
      "question_text": "<p>Consider the following code:</p>\n<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Pet:</span>\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(self, </span><span class=\"nb\">name</span><span class=\"p\">):</span>\n    self.<span class=\"vi\">name</span> <span class=\"o\">=</span> <span class=\"nb\">name</span>\n\n\n\n<span class=\"n\">rabbit</span> <span class=\"o\">=</span> <span class=\"no\">Pet</span><span class=\"p\">(</span><span class=\"s2\">\"Jabby\"</span><span class=\"p\">)</span>\n<span class=\"n\">rabbit</span><span class=\"p\">.</span><span class=\"nf\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Chokola\"<br>print(rabbit.name)<br></span>\n</code></pre>\n</div>\n<p>After running the code in the example above, what will <code><span class=\"s2\">print(rabbit.name)</span></code>&nbsp;return?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Object Attributes",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/5935/pages/object-attributes\">Object Attributes</a></li></ul><p></p>",
      "answers": [
        {
          "id": "6763",
          "text": "Chokola",
          "comments": "",
          "comments_html": "Yes! The rabbit's name was reassigned to \"Chokola\".",
          "weight": 100
        },
        {
          "id": "763",
          "text": "\"Chokola\"",
          "comments": "",
          "comments_html": "Yes! The rabbit's name was reassigned to \"Chokola\".",
          "weight": 100
        },
        {
          "id": "6367",
          "text": "'Chokola'",
          "comments": "",
          "comments_html": "Yes! The rabbit's name was reassigned to \"Chokola\".",
          "weight": 100
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 272178,
      "quiz_id": 37919,
      "quiz_group_id": null,
      "assessment_question_id": 469356,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Consider the following code:</p>\n<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Pet:</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(self, </span><span class=\"nb\">name</span><span class=\"p\">):</span>\n    self.<span class=\"vi\">name</span> <span class=\"o\">=</span> <span class=\"nb\">name</span>\n\n<span class=\"n\">buddy</span> <span class=\"o\">=</span> <span class=\"no\">Pet</span><span class=\"p\">(</span><span class=\"s2\">\"Buddy\"</span><span class=\"p\">)</span>\n<span class=\"n\">buddy</span><span class=\"p\">.</span><span class=\"nf\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Chappie\"<br>print(buddy.name)<br></span>\n</code></pre>\n</div>\n<p>Considering the code above, what will <code>buddy.name</code> output?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Attribute Accessors",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/5935/pages/attribute-accessors\">Attribute Accessors</a></li></ul><p></p>",
      "answers": [
        {
          "id": 4935,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"s2\">\"Chappie\"</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "Exactly! The name was reassigned on the last line of the code.",
          "weight": 100.0
        },
        {
          "id": 9508,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"s2\">\"Buddy\"</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "Not quite. Check out the last two lines of code. What's happening on each of\nthose lines?",
          "weight": 0.0
        },
        {
          "id": 9903,
          "text": "",
          "html": "<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"no\">TypeError</span>\n</code></pre>\n</div>",
          "comments": "",
          "comments_html": "Which line do you think will produce an error? What happens instead when you run\nthe code? Why does that happen?",
          "weight": 0.0
        },
        {
          "id": 6474,
          "text": "",
          "html": "I don't know",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 272179,
      "quiz_id": 37919,
      "quiz_group_id": null,
      "assessment_question_id": 469357,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Consider the following code:</p>\n<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Pet:</span>\n\n  <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(self, </span><span class=\"nb\">name</span><span class=\"p\">):</span>\n    self.<span class=\"vi\">name</span> <span class=\"o\">=</span> <span class=\"nb\">name</span>\n\n<span class=\"n\">buddy</span> <span class=\"o\">=</span> <span class=\"no\">Pet</span><span class=\"p\">(</span><span class=\"s2\">\"Buddy\"</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n<p>What will <code>buddy.name</code> in this example output?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Attribute Accessors",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/5935/pages/attribute-accessors\">Attribute Accessors</a></li></ul><p></p>",
      "answers": [
        {
          "id": 3438,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"s2\">\"Buddy\"</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Correct! The value of <code>name</code> was set when the object was initialized.</p>",
          "weight": 100.0
        },
        {
          "id": 2053,
          "text": "",
          "html": "<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code><span class=\"no\">TypeError</span>\n</code></pre>\n</div>",
          "comments": "",
          "comments_html": "Which line do you think will produce an error? What happens when you run the\ncode? Why?",
          "weight": 0.0
        },
        {
          "id": 7996,
          "text": "",
          "html": "I don't know",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}